---
# yaml-language-server: $schema=https://kubernetes-schemas.minuette.horse/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm
      chart: kube-prometheus-stack
      version: 49.0.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  timeout: 20m
  values:
    crds:
      enabled: true
    defaultRules:
      create: true
      rules:
        kubeApiserver: false
    prometheusOperator:
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
          slack_api_url: ${SECRET_ALERT_MANAGER_DISCORD_WEBHOOK}
        receivers:
          - name: 'null'
          - name: discord
            slack_configs:
              - channel: '#prometheus'
                icon_url: https://avatars3.githubusercontent.com/u/3380462
                username: Prometheus
                send_resolved: true
                title: |-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }}{{ else }}{{ .CommonLabels.alertname }}{{ end }}
                text: >-
                  {{ range .Alerts -}}
                    **Alert:** {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

                  **Description:** {{ if ne .Annotations.description ""}}{{ .Annotations.description }}{{else}}N/A{{ end }}

                  **Details:**
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}
        route:
          group_by: [alertname, job]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: discord
          routes:
            # Ignore Ceph alerts from outside the Ceph cluster
            - receiver: 'null'
              matchers:
                - alertname =~ "CephNode.+"
                - outsidecluster = ignoreceph
            # Ignore inode free alerts from msdosfs/vfat partitions (no inodes there)
            - receiver: 'null'
              matchers:
                - alertname = NodeFilesystemAlmostOutOfFiles
                - fstype =~ msdosfs|vfat
            - receiver: 'null'
              match_re:
                alertname: Watchdog|InfoInhibitor|etcdHighNumberOfFailedGRPCRequests
            - receiver: discord
              match_re:
                severity: critical
              continue: true
        inhibit_rules:
          - source_matchers:
              - severity = critical
            target_matchers:
              - severity =~ warning|info
            equal:
              - namespace
              - alertname
          - source_matchers:
              - severity = warning
            target_matchers:
              - severity = info
            equal:
              - namespace
              - alertname
          - source_matchers:
              - alertname = InfoInhibitor
            target_matchers:
              - severity = info
            equal:
              - namespace
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          auth.home.arpa/enabled: 'true'
        hosts:
          - &amhost alert-manager.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *amhost
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: rook-ceph-block
              resources:
                requests:
                  storage: 1Gi
    nodeExporter:
      serviceMonitor:
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    grafana:
      enabled: false
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints:
        - 172.17.2.1
        - 172.17.2.2
        - 172.17.2.3
      service:
        port: 10257
    kubeScheduler:
      enabled: true
      endpoints:
        - 172.17.2.1
        - 172.17.2.2
        - 172.17.2.3
      service:
        port: 10259
    kubeProxy:
      enabled: true
      endpoints:
        - 172.17.2.1
        - 172.17.2.2
        - 172.17.2.3
    kubeEtcd:
      enabled: true
      endpoints:
        - 172.17.2.1
        - 172.17.2.2
        - 172.17.2.3
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    kubelet:
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          auth.home.arpa/enabled: 'true'
        hosts:
          - &promhost prometheus.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *promhost
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 168h
        enableAdminAPI: true
        walCompression: true
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: feature.node.kubernetes.io/cpu-cpuid.AVX
                      operator: In
                      values:
                        - 'true'
        thanos:
          image: quay.io/thanos/thanos:v0.32.0
          version: v0.22.0
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: rook-ceph-block
              resources:
                requests:
                  storage: 50Gi
        additionalScrapeConfigs:
          - job_name: node-exporter
            honor_timestamps: true
            static_configs:
              - labels:
                  outsidecluster: ignoreceph
                targets:
                  - 172.16.1.1:9100

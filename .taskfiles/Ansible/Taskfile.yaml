---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  ANSIBLE_PLAYBOOK_DIR: "{{.ANSIBLE_DIR}}/playbooks"
  ANSIBLE_INVENTORY_DIR: "{{.ANSIBLE_DIR}}/inventory"
  ANSIBLE_CONFIG: "{{.ANSIBLE_DIR}}/ansible.cfg"

tasks:

  deps:
    desc: Create a Python virtual env and install required packages
    summary: task {{.TASK}}
    cmds:
      - "{{.PYTHON_BIN}} -m venv {{.ROOT_DIR}}/.venv"
      - '{{.VIRTUAL_ENV}}/bin/python3 -m pip install --upgrade pip setuptools wheel'
      - '{{.VIRTUAL_ENV}}/bin/python3 -m pip install --upgrade --requirement "{{.ANSIBLE_DIR}}/requirements.txt"'
      - '{{.VIRTUAL_ENV}}/bin/ansible-galaxy install --role-file "{{.ANSIBLE_DIR}}/requirements.yaml" --force'

  prepare:
    desc: Prepare all the k8s nodes for running k3s
    dir: "{{.ANSIBLE_DIR}}"
    cmd: ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-prepare.yaml

  install:
    desc: Install Kubernetes on the nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmd: ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-installation.yaml

  rollout-update:
    desc: Preform operating system updates and rollout restart the cluster
    dir: "{{.ANSIBLE_DIR}}"
    cmd: ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-rollout-update.yaml

  nuke:
    desc: Uninstall Kubernetes on the nodes
    dir: "{{.ANSIBLE_DIR}}"
    interactive: true
    cmd: ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-nuke.yaml

  reboot:
    desc: Reboot all the k8s nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmd: ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-reboot.yaml

  poweroff:
    desc: Shutdown all the k8s nodes
    dir: "{{.ANSIBLE_DIR}}"
    cmd: ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml -a '/usr/bin/systemctl poweroff' --become

  list:
    desc: List all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmd: ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml --list-hosts

  ping:
    desc: Ping all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmd: ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml --one-line -m 'ping'

  uptime:
    desc: Uptime of all the hosts
    dir: "{{.ANSIBLE_DIR}}"
    cmd: ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml --one-line -a 'uptime'

  soft-reboot:
    desc: Reboot all the k8s nodes softly using Kured
    dir: '{{.ANSIBLE_DIR}}'
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-softreboot.yml

  rook-nuke:
    desc: Uninstall Rook on the nodes
    dir: '{{.ANSIBLE_DIR}}'
    interactive: true
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-rook-nuke.yml
      - task: force-reboot

---
  # This Github Action is responsible for publishing Kubernetes schemas to an OCI registry.
  # It is triggered by a push to the main branch, a weekly schedule, or a manual dispatch.
  name: "Publish Kubernetes Schemas"

  on: # yamllint disable-line rule:truthy
    # Allows manually triggering the workflow from the Github Actions UI
    workflow_dispatch: {}

    # # Runs the workflow weekly at midnight (UTC)
    schedule:
      - cron: "0 0 * * 0"
    push:
      branches:
        - "main"
      paths:
        - ".github/workflows/publish-kubernetes-schemas.yaml"

  env:
    OCI_REPO: "oci://ghcr.io/woll0r/kubernetes-schemas/${{ github.event.repository.name }}"

  jobs:
    publish-kubernetes-schemas:
      name: Publish Kubernetes Schemas
      runs-on: ["arc-runner-set-home-ops"]
      steps:
        - name: Setup Flux CLI
          uses: fluxcd/flux2/action@896e0fa46d5107a05e953dd0a5261d78a145ec8c # v2.3.0
          with:
            token: ${{ secrets.GITHUB_TOKEN }}

        - uses: azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f # v4
          with:
            version: 'latest'

        - name: Setup Python
          uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
          with:
            python-version: 3.x

        - name: Setup crd-extractor
          uses: robinraju/release-downloader@a96f54c1b5f5e09e47d9504526e96febd949d4c2 # v1.11
          with:
            repository: datreeio/CRDs-catalog
            latest: true
            fileName: crd-extractor.zip

        - name: Write kubeconfig
          id: kubeconfig
          uses: timheuer/base64-to-file@adaa40c0c581f276132199d4cf60afa07ce60eac # v1.2
          with:
            encodedString: ${{ secrets.KUBECONFIG }}
            fileName: kubeconfig

        - name: Run crd-extractor
          env:
            KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
          run: |
            unzip -j "$GITHUB_WORKSPACE/crd-extractor.zip" -d "$GITHUB_WORKSPACE"
            bash "$GITHUB_WORKSPACE/crd-extractor.sh"

        - name: Login to GHCR
          uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Publish schemas as OCI
          run: |
            flux push artifact "$OCI_REPO:$(git rev-parse --short HEAD)" \
                --path="/home/runner/.datree/crdSchemas" \
                --source="${{ github.repositoryUrl }}" \
                --revision="main"

    publish-kubernetes-schemas-web:
      name: Publish Kubernetes Schemas Web image
      #runs-on: ubuntu-latest
      runs-on: ["arc-runner-set-home-ops"]
      needs: ["publish-kubernetes-schemas"]
      steps:
        - name: Setup Flux CLI
          uses: fluxcd/flux2/action@main
          with:
            token: ${{ secrets.GITHUB_TOKEN }}

        - name: Set up Docker Context for Buildx
          id: buildx-context
          run: |
            docker context create builders

        - name: Setup Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
          with:
            endpoint: builders

        - name: Generate container metadata
          id: meta
          uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
          with:
            images: |
              ghcr.io/${{ github.repository_owner }}/kubernetes-schemas-web
            tags: |
              type=sha
              type=raw,value=latest,enable={{is_default_branch}}

        - name: Login to GHCR
          uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Pull schemas as OCI
          run: |
            mkdir -p /home/runner/crdSchemas
            flux pull artifact "$OCI_REPO:$(git rev-parse --short HEAD)" --output /home/runner/crdSchemas

        - name: Write nginx-unprivileged Dockerfile
          run: |
            cat <<EOF > /home/runner/crdSchemas/Dockerfile
            FROM docker.io/nginxinc/nginx-unprivileged:latest
            COPY --chown=nginx:nginx --chmod=755 . /usr/share/nginx/html
            USER nginx
            EOF

        - name: Publish schemas as web container
          uses: docker/build-push-action@16ebe778df0e7752d2cfcbd924afdbbd89c1a755 # v6.6.1
          with:
            context: /home/runner/crdSchemas
            platforms: linux/amd64,linux/arm64
            file: /home/runner/crdSchemas/Dockerfile
            push: true
            tags: "${{ steps.meta.outputs.tags }}"
            labels: "${{ steps.meta.outputs.labels }}"

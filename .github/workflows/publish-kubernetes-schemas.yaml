---
  # This Github Action is responsible for publishing Kubernetes schemas to an OCI registry.
  # It is triggered by a push to the main branch, a weekly schedule, or a manual dispatch.
  name: "Publish Kubernetes Schemas"

  on: # yamllint disable-line rule:truthy
    # Allows manually triggering the workflow from the Github Actions UI
    workflow_dispatch: {}
    # Runs the workflow weekly at midnight (UTC)
    schedule:
      - cron: "0 0 * * 0"
    push:
      branches:
        - "main"
      paths:
        - ".github/workflows/publish-kubernetes-schemas.yaml"

  env:
    OCI_REPO: "oci://ghcr.io/woll0r/kubernetes-schemas/${{ github.event.repository.name }}"

  jobs:
    publish-kubernetes-schemas:
      name: Publish Kubernetes Schemas
      runs-on: ["arc-runner-set-home-ops"]
      steps:
        - name: Setup Flux CLI
          uses: fluxcd/flux2/action@53ad742e2d0f6f0df19ec11a25a0e3adce80c475 # v2.2.0
          with:
            token: ${{ secrets.GITHUB_TOKEN }}

        - uses: azure/setup-kubectl@901a10e89ea615cf61f57ac05cecdf23e7de06d8 # v3
          with:
            version: 'latest'

        - name: Setup Python
          uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
          with:
            python-version: 3.x

        - name: Setup crd-extractor
          uses: robinraju/release-downloader@efa4cd07bd0195e6cc65e9e30c251b49ce4d3e51 # v1.8
          with:
            repository: datreeio/CRDs-catalog
            latest: true
            fileName: crd-extractor.zip

        - name: Write kubeconfig
          id: kubeconfig
          uses: timheuer/base64-to-file@adaa40c0c581f276132199d4cf60afa07ce60eac # v1.2
          with:
            encodedString: ${{ secrets.KUBECONFIG }}
            fileName: kubeconfig

        - name: Run crd-extractor
          env:
            KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
          run: |
            unzip -j "$GITHUB_WORKSPACE/crd-extractor.zip" -d "$GITHUB_WORKSPACE"
            bash "$GITHUB_WORKSPACE/crd-extractor.sh"

        - name: Login to GHCR
          uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Publish schemas as OCI
          run: |
            flux push artifact "$OCI_REPO:$(git rev-parse --short HEAD)" \
                --path="/home/runner/.datree/crdSchemas" \
                --source="${{ github.repositoryUrl }}" \
                --revision="main"

    publish-kubernetes-schemas-web:
      name: Publish Kubernetes Schemas Web image
      #runs-on: ubuntu-latest
      runs-on: ["arc-runner-set-home-ops"]
      needs: ["publish-kubernetes-schemas"]
      steps:
        - name: Setup Flux CLI
          uses: fluxcd/flux2/action@main
          with:
            token: ${{ secrets.GITHUB_TOKEN }}

        - name: Setup QEMU
          uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

        - name: Set up Docker Context for Buildx
          id: buildx-context
          run: |
            docker context create builders

        - name: Setup Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
          with:
            endpoint: builders

        - name: Login to GHCR
          uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Pull schemas as OCI
          run: |
            mkdir -p /home/runner/crdSchemas
            flux pull artifact "$OCI_REPO:$(git rev-parse --short HEAD)" --output /home/runner/crdSchemas

        - name: Write nginx-unprivileged Dockerfile
          run: |
            cat <<EOF > /home/runner/crdSchemas/Dockerfile
            FROM docker.io/nginxinc/nginx-unprivileged:latest
            COPY --chown=nginx:nginx --chmod=755 . /usr/share/nginx/html
            USER nginx
            EOF

        - name: Publish schemas as web container
          uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
          with:
            context: /home/runner/crdSchemas
            platforms: linux/amd64,linux/arm64
            file: /home/runner/crdSchemas/Dockerfile
            push: true
            tags: |
              ghcr.io/woll0r/kubernetes-schemas-web:latest
            cache-from: type=gha
            cache-to: type=gha,mode=max
            labels: |
              org.opencontainers.image.source="https://github.com/${{ github.repository }}"
              org.opencontainers.image.authors="Wolfgang Vandevenne <woll0r@users.noreply.github.com>"

    clean-images:
      name: Delete old versions of container images
      runs-on: ["arc-runner-set-home-ops"]
      needs: ["publish-kubernetes-schemas-web"]
      strategy:
        matrix:
          packages:
            - kubernetes-schemas-web
            - kubernetes-schemas/k8s-cluster
      steps:
        - name: Delete ${{ matrix.packages }}
          uses: actions/delete-package-versions@v4
          with:
            package-name: ${{ matrix.packages }}
            package-type: container
            delete-only-untagged-versions: 'true'
            min-versions-to-keep: 5

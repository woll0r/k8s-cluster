---
  # yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
  name: "devcontainer"

  on:
    workflow_dispatch:
    push:
      branches: ["main"]
      paths: [".devcontainer/ci/**", ".github/workflows/publish-kubernetes-schemas.yaml"]
    pull_request:
      branches: ["main"]
      paths: [".devcontainer/ci/**", ".github/workflows/publish-kubernetes-schemas.yaml"]
    schedule:
      - cron: "0 0 * * 1"

  concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
    cancel-in-progress: true

  jobs:
    devcontainer:
      name: publish
      # runs-on: ubuntu-latest
      runs-on: ["arc-runner-set-home-ops"]
      permissions:
        contents: read
        packages: write
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Setup node
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3

        - name: Set up Docker Context for Buildx
          id: buildx-context
          run: |
            docker context create builders

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
          with:
            platforms: linux/amd64,linux/arm64
            endpoint: builders

        - if: ${{ github.event_name != 'pull_request' }}
          name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Build and push
          uses: devcontainers/ci@v0.3
          env:
            BUILDX_NO_DEFAULT_ATTESTATIONS: true
          with:
            imageName: ghcr.io/${{ github.repository }}/devcontainer
            # cacheFrom: ghcr.io/${{ github.repository }}/devcontainer
            imageTag: base,latest
            platform: linux/amd64,linux/arm64
            configFile: .devcontainer/ci/devcontainer.json
            push: ${{ github.event_name == 'pull_request' && 'never' || 'always' }}
